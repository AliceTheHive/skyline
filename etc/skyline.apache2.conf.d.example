####    skyline.apache2.conf.d.example    ####
#
#
#  THIS IS AN EXAMPLE
#  User variables are all prefixed with <YOUR_
#  This example assumes you only have this Skyline vhost binding to port 443
#  and serving SSL on the machine
#

<IfModule !ssl_module>
  LoadModule ssl_module modules/mod_ssl.so
</IfModule>
<IfModule !proxy_module>
  LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
  LoadModule proxy_http_module modules/mod_proxy_http.so
</IfModule>
<IfModule !headers_module>
  LoadModule headers_module modules/mod_headers.so
</IfModule>

<VirtualHost <YOUR_SERVER_IP_ADDRESS>:443>
    ServerName "<YOUR_SKYLINE_SERVER_FQDN>"
    ServerAdmin "<YOUR_EMAIL>"
    ServerSignature Off

    # Logging examples
    # ErrorLog "|rotatelogs -c -L /var/log/httpd/skyline.error.log /var/log/httpd/skyline.error.log 86400"
    # CustomLog "|rotatelogs -c -L /var/log/httpd/skyline.access.log /var/log/httpd/skyline.access.log 86400" combined

    ErrorLog "<YOUR_ERROR_LOG>"
    CustomLog "<YOUR_CUSTOM_LOG>"

# @added 20180527 - Feature #2378: Add redis auth to Skyline and rebrow
# Added SSL to always encrypt POST data
    SSLEngine on
# As https://wiki.mozilla.org/Security/Server_Side_TLS
    SSLProtocol ALL -SSLv2 -SSLv3
    SSLHonorCipherOrder On
    SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!DES-CBC3-SHA
    SSLCertificateFile "<YOUR_PATH_TO_YOUR_CERTIFICATE_FILE>"
    SSLCertificateKeyFile "<YOUR_PATH_TO_YOUR_KEY_FILE>"
    SSLCertificateChainFile "<YOUR_PATH_TO_YOUR_CHAIN_FILE_IF_YOU_HAVE_ONE_OTHERWISE_COMMENT_THIS_LINE_OUT>"

    # Set the Strict-Transport-Security and X-Frame-Options headers
    Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
    Header always append X-Frame-Options SAMEORIGIN

    # Mitigate httpoxy vulnerability
    RequestHeader unset Proxy early

    # Set the Strict-Transport-Security and X-Frame-Options headers
    Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
    Header always append X-Frame-Options SAMEORIGIN

    LimitRequestFieldSize 32768
    <Location />
        authType Basic
        authName Restricted
#        authUserFile "/etc/httpd/conf.d/.skyline_htpasswd"
        authUserFile "<YOUR_HTPASSWD_FILE>"
        Require valid-user
        Order allow,deny
        Allow from <YOUR_SERVER_IP_ADDRESS>
        Allow from <YOUR_OTHER_IP_ADDRESS>
        Deny from all
        Satisfy any
    </Location>

# @added 20180527 - Feature #2378: Add redis auth to Skyline and rebrow
# Added the X-Forwarded-Proto header so that Flask can determine the original
# client protocol and issue warnings if not accessed via a SSL terminated
# endpoint.
    RequestHeader set X-Forwarded-Proto "https"

    # Proxy https requests to gunicorn on your settings.WEBAPP_IP and
    # settings.WEBAPP_PORT, defaults are used here
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:1500/
    ProxyPassReverse / http://127.0.0.1:1500/

    # Set CORS (cross-origin resource sharing) headers d3.js, jquery and ajax
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT"
    Header always set Access-Control-Max-Age "1000"
    Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"

    # Added a rewrite to respond with a 200 SUCCESS on every OPTIONS request.
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]

</VirtualHost>
